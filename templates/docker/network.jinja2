{% macro networks_declaration(networks) %}
networks:
{% for network in networks %}
{% set use_v6 = network.v6 is defined and network.v6.enable %}
{% if network.v4 is not defined %}
  {{ network.name }}:
    external: true
    scope: swarm
{% else %}
  {{ network.name }}:
    driver: overlay
{%  if use_v6 %}
    driver_opts:
      com.docker.network.enable_ipv6: "true"
{%  endif %}
    ipam:
      driver: default
      config:
        - subnet: "{{ network.v4.subnet }}"
{%    if use_v6 %}
        - subnet: "{{ network.v6.subnet }}"
{%    endif %}
{% endif %}
{% endfor %}
{% endmacro %}

{% macro discovery_networks_declaration() %}
{{ networks_declaration([ discovery_network ]) }}
{% endmacro %}

{% macro discovery_network_section() %}
networks:
  {{ network_names.discovery }}:
{% endmacro %}

{#
  ports: (host: int, container?: int, protocol?: "udp" | "tcp")[]
#}
{% macro map_ports(ports) %}
ports:
{% for data in ports %}
{% if data|length == 1 %}
  - {{ data[0] }}:{{ data[0] }}
{% elif data|length == 2 and "str" in data[1].__class__.__name__ %}
  - {{ data[0] }}:{{ data[0] }}/{{ data[1] }}
{% elif data|length == 2 and "int" in data[1].__class__.__name__ %}
  - {{ data[0] }}:{{ data[1] }}
{% elif data|length == 3 %}
  - {{ data[0] }}:{{ data[1] }}/{{ data[2] }}
{% else %}
{{ "TODO: Write plugin to throw exceptions"/0 }}
{% endif %}
{% endfor %}
{% endmacro %}
