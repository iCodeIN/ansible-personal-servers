{% import 'docker/volumes.jinja2' as dv with context -%}
{% import 'docker/network.jinja2' as dn with context -%}
{% import 'docker/misc.jinja2' as dm with context -%}
{% import 'traefik/http.jinja2' as traefik with context -%}

{% set vols_matrix_server = [ matrix_server.volumes.data ] %}
{% set vols_db = [ matrix_server_db.volumes.data ] %}
{% set service_name = 'matrix_synapse' %}
{% set wk_path = "/.well-known/matrix/" %}
{% set wk_service_name = "matrix_well_known" %}

version: "3"
services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: {{ matrix_server_db.db_user }}
      POSTGRES_PASSWORD: '{{ matrix_server_db_password }}'
      POSTGRES_DB: na_default
    {{ dv.volumes_section_complete(vols_db)|indent(width = 4) }}
      - {{ root_dirs.matrix_server }}/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql:ro
    networks:
      {{ matrix_server.networks.name }}:
    {{ dm.common()|indent(width = 4) }}

{# https://github.com/matrix-org/synapse/tree/master/docker #}
  server:
    image: matrixdotorg/synapse:v1.26.0
    container_name: matrix_server
    environment:
      UID: '{{ matrix_server.user }}'
      GID: '{{ matrix_server.user }}'
      TZ: {{ timezone }}
    {{ traefik.declare_labels_mount_path(dns.public.root, service_name, "/_matrix/", 8008,
        traefik.minimal_middlewares_no_auth,
        [ 'websecure' ]
      )|indent(width = 4) }}
      {{ traefik.use_letsencrypt(service_name) }}
    {{ dv.volumes_section_complete(vols_matrix_server)|indent(width = 4) }}
    {{ dn.discovery_network_section()|indent(width = 4) }}
      {{ network_names.datastore }}:
      {{ matrix_server.networks.name }}:
    {{ dm.common()|indent(width = 4) }}
    depends_on:
      - db

  turnserver:
    image: killua99/coturn:latest
    network_mode: host
    tmpfs:
      - /var/lib/coturn
    volumes:
      - {{ root_dirs.matrix_server }}/turnserver.conf:/etc/coturn/turnserver.conf
      - {{ global_cert_dir }}/realmar.net.crt:/opt/certificates/realmar.net.crt
      - {{ global_cert_dir }}/realmar.net.pem:/opt/certificates/realmar.net.pem
    {{ dm.common()|indent(width = 4) }}

  well_known:
    image: nginx:latest
    {{ traefik.declare_labels_mount_path(dns.public.root, wk_service_name, wk_path, 80,
        [
          {
            "mw": traefik.replace_path_regex,
            "args": {
              "regex": "^" + wk_path + "(server|client)$",
              "replacement": "/well-known_$1.json"
            }
          },
          {
            "mw": traefik.add_cors,
            "args": {
              "originlist": "*",
              "methods": "GET,POST,PUT,DELETE,OPTIONS",
              "allowheaders": "Origin,X-Requested-With,Content-Type,Accept,Authorization"
            }
          },
        ],
        [ 'websecure' ]
      )|indent(width = 4) }}
      {{ traefik.use_letsencrypt(wk_service_name) }}
    volumes:
{% for file in [ "well-known_server.json", "well-known_client.json" ] %}
      - {{ root_dirs.matrix_server }}/{{ file }}:/usr/share/nginx/html/{{ file }}:ro
{% endfor %}
    {{ dn.discovery_network_section()|indent(width = 4) }}
    {{ dm.common()|indent(width = 4) }}

{{ dn.networks_declaration([ discovery_network, datastore_network ]) }}
  {{ matrix_server.networks.name }}:

{{ dv.volumes_declaration(vols_matrix_server + vols_db) }}
