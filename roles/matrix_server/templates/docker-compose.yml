{% import 'docker/volumes.jinja2' as dv with context -%}
{% import 'docker/network.jinja2' as dn with context -%}
{% import 'docker/misc.jinja2' as dm with context -%}

{% set vols_matrix_server = [ matrix_server_volumes_data ] %}
{% set vols_db = [ matrix_server_db_volumes_data ] %}
{% set vols_telegram = [ matrix_server_telegram_volumes_data ] %}
{% set vols_all = vols_matrix_server + vols_db + vols_telegram %}

{% set service_name = 'matrix_synapse' %}
{% set wk_path = "/.well-known/matrix/" %}
{% set wk_service_name = "matrix_well_known" %}

version: "3"
services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: {{ matrix_server_db_user }}
      POSTGRES_PASSWORD: '{{ matrix_server_db_password }}'
      POSTGRES_DB: na_default
    {{ dv.volumes_section_complete(vols_db)|indent(width = 4) }}
      - {{ root_dirs_matrix_server }}/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql:ro
    networks:
      {{ matrix_server_networks.name }}:
    {{ dm.common()|indent(width = 4) }}

{# https://github.com/matrix-org/synapse/tree/master/docker #}
  synapse:
    image: matrixdotorg/synapse:v1.26.0
    container_name: synapse
    environment:
      UID: '{{ matrix_server_user }}'
      GID: '{{ matrix_server_user }}'
      TZ: {{ timezone }}
    {{ lookup('traefik', { 'service_name': 'matrix_synapse', 'strip_path': False, 'use_auth': False, 'path': '/_matrix/', 'port': 8008 })|indent(width = 4) }}
    {{ dv.volumes_section_complete(vols_matrix_server + [ matrix_server_volumes_telegram_data ])|indent(width = 4) }}
    {{ dn.discovery_network_section()|indent(width = 4) }}
      {{ network_names_datastore }}:
      {{ matrix_server_networks.name }}:
    {{ dm.common()|indent(width = 4) }}
    depends_on:
      - db

  mautrix_telegram:
    container_name: {{ matrix_server_telegram_container_name }}
    image: dock.mau.dev/tulir/mautrix-telegram:latest
    {{ dv.volumes_section_complete(vols_telegram)|indent(width = 4) }}
    {{ dm.common()|indent(width = 4) }}
    networks:
      {{ network_names_datastore }}:
      {{ matrix_server_networks.name }}:
    depends_on:
      - synapse

  element_web:
    image: 'bubuntux/element-web'
    {{ lookup('traefik', { 'service_name': 'element_web', 'domain': dns_sub_domains_element, 'use_dns_root': True, 'use_auth': False })|indent(width = 4) }}
    {{ dv.volumes_section_complete()|indent(width = 4) }}
      - {{ root_dirs_matrix_server }}/element_web_config.json:/etc/element-web/config.json:ro
    {{ dn.discovery_network_section()|indent(width = 4) }}
    {{ dm.common()|indent(width = 4) }}
    depends_on:
      - synapse

  turnserver:
    image: killua99/coturn:latest
    network_mode: host
    tmpfs:
      - /var/lib/coturn
    volumes:
      - {{ root_dirs_matrix_server }}/turnserver.conf:/etc/coturn/turnserver.conf
      - {{ global_cert_dir }}/realmar.net.crt:/opt/certificates/realmar.net.crt
      - {{ global_cert_dir }}/realmar.net.pem:/opt/certificates/realmar.net.pem
    {{ dm.common()|indent(width = 4) }}

  well_known:
    image: nginx:latest
    {{ lookup('traefik', { 'service_name': 'matrix_well_known', 'use_defaults': False, 'path': wk_path,
      'renderers': {
        'replace_path_regex': {
          "regex": "^" + wk_path + "(server|client)$",
          "replacement": "/well-known_$1.json"
        },
        'add_cors': {
          "originlist": "*",
          "methods": "GET,POST,PUT,DELETE,OPTIONS",
          "allowheaders": "Origin,X-Requested-With,Content-Type,Accept,Authorization"
        }
    } })|indent(width = 4) }}
    volumes:
{% for file in [ "well-known_server.json", "well-known_client.json" ] %}
      - {{ root_dirs_matrix_server }}/{{ file }}:/usr/share/nginx/html/{{ file }}:ro
{% endfor %}
    {{ dn.discovery_network_section()|indent(width = 4) }}
    {{ dm.common()|indent(width = 4) }}

{{ dn.networks_declaration([ discovery_network, datastore_network ]) }}
  {{ matrix_server_networks.name }}:

{{ dv.volumes_declaration(vols_all) }}
