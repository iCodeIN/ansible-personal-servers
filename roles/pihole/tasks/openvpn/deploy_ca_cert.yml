- name: Get pwd on local machine
  local_action: command pwd
  register: root_path_cmd
  changed_when: False

- set_fact:
    relative_cert_dir: certs/etc-openvpn/pki

- set_fact:
    cert_dir: "{{ root_path_cmd.stdout }}/roles/pihole/files/openvpn/{{ relative_cert_dir }}"

- name: Check if there is a pre-generated VPN CA cert
  local_action:
    module: stat
    path: "{{ cert_dir }}"
  register: cert_dir_stat

- name: Check if VPN CA cert files exists
  stat:
    path: "{{ openvpn.volumes.config.local_folder }}/pki/ca.crt"
  register: ca_cert

- name: Copy pre-generated VPN CA cert files
  copy:
    src: "openvpn/{{ relative_cert_dir }}"
    dest: "{{ openvpn.volumes.config.local_folder }}"
    owner: "{{ user }}"
    group: "{{ user }}"
  when: cert_dir_stat.stat.exists and ca_cert.stat.exists == false

- name: No pre-generated VPN CA cert found, generating one ...
  block:
  - name: Generate VPN CA Cert password
    set_fact:
      ca_cert_pw: "{{ lookup('template', 'standard_pw_gen.jinja2', template_vars=dict(name='vpn_ca_cert')) }}"

  - name: Generate VPN CA cert
    expect:
      command: "docker run -e EASYRSA_KEY_SIZE={{ openvpn.conf.ca_cert_bits }} -v {{ openvpn.volumes.config.local_folder }}:{{ openvpn.volumes.config.mount }} --rm -it kylemanna/openvpn ovpn_initpki"
      responses:
        'Enter New CA Key Passphrase:': "{{ ca_cert_pw }}"
        'Re-Enter New CA Key Passphrase:': "{{ ca_cert_pw }}"
        '\[Easy\-RSA\sCA\]:': "{{ openvpn.conf.dns }}"
        'Enter pass phrase for \/etc\/openvpn\/pki\/private\/ca\.key:': "{{ ca_cert_pw }}"
      timeout: 604800
  when: cert_dir_stat.stat.exists == false and ca_cert.stat.exists == false
