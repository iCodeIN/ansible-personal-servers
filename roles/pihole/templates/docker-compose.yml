version: '3'

#
# https://howchoo.com/g/nmrlzmq1ymn/how-to-install-docker-on-your-raspberry-pi
# https://github.com/kylemanna/docker-openvpn/blob/master/docs/docker-compose.md
# https://github.com/mr-bolle/docker-openvpn-pihole/blob/master/openvpn-install.sh
#
# IPv6:
# https://github.com/kylemanna/docker-openvpn/blob/83b939456e5432ded267b2f08309b257affa2a03/docs/ipv6.md
#
# Build OpenVPN Docker image for RPI
#
# git clone https://github.com/kylemanna/docker-openvpn.git && cd docker-openvpn
# sed -i "/FROM/s/aarch64/arm32v7/g" Dockerfile.aarch64
# sed -i "/FROM/s/latest/alpine/g" Dockerfile.aarch64
# sed -i "/FROM/s/3.5/latest/g" Dockerfile.aarch64
# docker build --no-cache -t kylemanna/openvpn -f Dockerfile.aarch64 .
# cd .. && rm -f -r docker-openvpn
#
# Setup
#
# export OVPN_DATA=`pwd`/etc-openvpn/
#
# docker network create --driver=bridge --subnet=172.110.1.0/24 --gateway=172.110.1.1 vpn-net
#
# docker run -v $OVPN_DATA:/etc/openvpn --rm kylemanna/openvpn ovpn_genconfig -n 172.110.1.4 -u udp://vpn.realmar.net
# docker run -v $OVPN_DATA:/etc/openvpn --rm -it kylemanna/openvpn ovpn_initpki
#
# docker run -v $OVPN_DATA:/etc/openvpn --rm -it kylemanna/openvpn easyrsa build-client-full pihole-vpn
# docker run -v $OVPN_DATA:/etc/openvpn --rm kylemanna/openvpn ovpn_getclient pihole-vpn > $OVPN_DATA/pihole-vpn.ovpn
#

{% import "pihole_ipam.jinja2" as pihole_ipam with context %}
{% import "password_gen.jinja2" as gen with context %}

services:
  openvpn:
    container_name: {{ openvpn.name }}
    image: kylemanna/openvpn
{% if openvpn.use_host_net == false %}
    ports:
      - "1194:1194/udp"
      - "1194:1194/tcp"
{% endif %}
    environment:
     #  - VIRTUAL_PORT=${VIRTUAL_PORT_OPENVPN}
     #  - VIRTUAL_HOST=${VIRTUAL_HOST_OPENVPN}
     #  - LETSENCRYPT_HOST=${LETSENCRYPT_HOST_VPN}
     #  - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
     #  - OPENVPN_PROVIDER=${OPENVPN_PROVIDER}
     #  - OPENVPN_USERNAME=${OPENVPN_USERNAME}
     #  - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
     # - LOCAL_NETWORK=192.168.0.0/24
      OPENVPN_OPTS: --inactive 3600 --ping 10 --ping-exit 60 -â€“log-driver json-file --log-opt max-size=10m
    volumes:
      - {{ volumes.vpn.config.name }}:{{ volumes.vpn.config.mount }}
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    restart: always
{% if openvpn.use_host_net %}
    network_mode: host
{% else %}
    networks:
      {{ networks.vpn.name }}:
        ipv4_address: {{ openvpn.ipv4 }}
{%   if networks.vpn.v6.enable %}
        ipv6_address: {{ openvpn.ipv6 }}
{%   endif %}
{%   if pihole.use_host_net == false %}
      {{ networks.pihole.name }}:
{%   endif %}
{% endif %}
{% if networks.vpn.v6.enable %}
    privileged: yes
{% endif %}
    cap_add:
      - NET_ADMIN
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  pihole:
    image: pihole/pihole:latest
    container_name: {{ pihole.name }}
    dns:
      - 127.0.0.1
      - 1.1.1.1
      - 1.0.0.1
    depends_on:
      - openvpn
{% if pihole.use_host_net == false %}
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
      - "443:443/tcp"
{% endif %}
    environment:
{#                 We need to escape $-sign with two $$-signs #}
      WEBPASSWORD: '{{ gen.pw("web") | replace("$", "$$") }}'
      TZ: 'Europe/Zurich'
      DNS1: 1.1.1.1
      DNS2: 1.0.0.1
      ServerIP: {{ pihole_ipam.ipam.ipv4 }}
{% if pihole.use_host_net %}
      IPv6: "True"
      ServerIPv6: {{ host.ipv6 }}
{% elif networks.pihole.v6.enable %}
      IPv6: "True"
      ServerIPv6: {{ pihole_ipam.ipam.ipv6 }}
{% endif %}
      DNSMASQ_LISTENING: all
    volumes:
{% set vols = [
  volumes.pihole.main ,
  volumes.pihole.dnsmasq
] -%}
{% for volume in vols %}
      - {{ volume.name }}:{{ volume.mount }}
{% endfor %}
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    restart: always
{% if pihole.use_host_net %}
    network_mode: host
{% else %}
    networks:
      {{ networks.pihole.name }}:
        ipv4_address: {{ pihole_ipam.ipam.ipv4 }}
{%      if networks.pihole.v6.enable %}
        ipv6_address: {{ pihole_ipam.ipam.ipv6 }}
{%      endif %}
{% endif %}
    cap_add:
      - NET_ADMIN     
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

{% set nets = [] %}
{% if pihole.use_host_net == false %}
{{   nets.append(networks.pihole) }}
{% endif %}
{% if openvpn.use_host_net == false %}
{{   nets.append(networks.vpn) }}
{% endif %}
{% if nets|length > 0 %}
# docker network create --ipv6 --driver=bridge --subnet=172.16.0.1/24 --gateway=172.16.0.1 --subnet=2002:ac10:0001::/64 --gateway=2002:ac10:0001::1 vpn-net
networks:
{% for network in nets %}
  {{ network.name }}:
    external: true
{% endfor %}
{% endif %}

volumes:
{% set vols = [
  volumes.pihole.main ,
  volumes.pihole.dnsmasq,
  volumes.vpn.config
] -%}
{% for volume in vols %}
  {{ volume.name }}:
    driver: local
    driver_opts:
      type: none
      device: {{ volume.local_folder }}
      o: bind
{% endfor %}
