data_dir = "{{ vector_volumes_data.mount }}"

# ==============================================================================
# Syslog
# ==============================================================================

#
# Sources
#

[sources.host_syslog]
type = "syslog"
address = "0.0.0.0:{{ vector_syslog_port }}"
max_length = 102_400
mode = "tcp"
path = "{{ vector_volumes_data.mount }}/syslog.socket"

#
# Transforms
#

[transforms.remap_syslog]
type = "remap"
inputs = [ "host_syslog" ]
source = ". |= parse_syslog!(.message)"

#
# Sinks
#

[sinks.loki_syslog]
type = "loki"
inputs = [ "remap_syslog" ]
endpoint = "{{ loki_endpoint }}"

  [sinks.loki_syslog.request]
  concurrency = "adaptive"

  [sinks.loki_syslog.labels]
  forwarder = 'vector'
  host = '{{ host_name }}'
{% raw %}
  # Common
  source = '{{ stream }}'
  application = '{{ appname }}'

  # Specific
{% endraw %}
  category = 'syslog'

  [sinks.loki_syslog.encoding]
  codec = "json"

# ==============================================================================
# Docker
# ==============================================================================

#
# Sources
#

[sources.host_docker]
type = "docker_logs"
auto_partial_merge = true

  [sources.host_docker.multiline]
  # Identify zero-width space as first line of a multiline block.
  condition_pattern = '^\x{200B}' # required
  mode = "halt_before" # required
  start_pattern = '^\x{200B}' # required
  timeout_ms = 1000 # required, milliseconds

#
# Transforms
#

#
# Sinks
#

[sinks.loki_docker]
type = "loki"
inputs = [ "host_docker" ]
endpoint = "{{ loki_endpoint }}"

  [sinks.loki_docker.request]
  concurrency = "adaptive"

  [sinks.loki_docker.labels]
  forwarder = 'vector'
  host = '{{ host_name }}'
{% raw %}
  # Common
  application = '{{ label.com\.docker\.compose\.service }}'
  source = '{{ stream }}'

  # Specific
  container_name = '{{ container_name }}'
  compose_service = '{{ label.com\.docker\.compose\.service }}'
  compose_project = '{{ label.com\.docker\.compose\.project }}'
{% endraw %}
  category = 'dockerlogs'

  [sinks.loki_docker.encoding]
  codec = "json"
