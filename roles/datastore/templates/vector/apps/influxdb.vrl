{% import "vector/utils/utils.vrl" as vrl with context -%}

.data, err = parse_regex(.message, r'\[httpd\]\s(?P<ips>.+)\s(?P<identity>.+)\s(?P<user>.+)\s\[(?P<timestamp>[^\]]+)\]\s\\?"(?P<method>[^\s]+)\s(?P<path>[^\s]+)\s(?P<protocol>[^"]+)\\?"\s(?P<status>[^\s]+)\s(?P<response_size>[^\s]+)\s\\?"(?P<referrer>[^"]+)\\?"\s\\?"(?P<useragent>[^"]+)\\?"\s(?P<request_id>[^\s]+)\s(?P<response_time>[^$]+)')
# .data, err = parse_regex(.message, r'\[httpd\]\s(?P<ips>.+)\s-\s-\s\[(?P<timestamp>[^\]]+)\]\s"(?P<method>[^\s]+)\s(?P<path>[^\s]+)\s(?P<protocol>[^"]+)"\s(?P<status>[^\s]+)\s(?P<response_size>[^\s]+)\s"(?P<referrer>[^"]+)"\s"(?P<useragent>[^"]+)"\s(?P<request_id>[^\s]+)\s(?P<response_time>[^$]+)')
{{ vrl.process_msg_err()|indent(width = 2) }}

if is_null(err) {
  {{ vrl.try_parse_int('response_size')|indent(width = 2) }}
  {{ vrl.try_parse_int('response_time')|indent(width = 2) }}
  {{ vrl.parse_http_status()|indent(width = 2) }}
}
