- block:
  - name: Create datastore network
    include_tasks: docker/network/add_docker_network.yml
    vars:
      network: "{{ datastore_networks }}"
  tags: docker_network

- block:
    - include_tasks: standard_service.yml
      vars:
        usr: "{{ user }}"
        root_dir: "{{ root_dirs_datastore }}"
        dirs:
          - "{{ influxdb_volumes_data.local_folder }}"
          - "{{ chronograf_volumes_data.local_folder }}"
          - "{{ kapacitor_volumes_data.local_folder }}"
          - "{{ grafana_volumes_data.local_folder }}"
          - "{{ grafana_db_volumes_data.local_folder }}"
          - "{{ registry_volumes_data.local_folder }}"
          - "{{ registry_volumes_certificates.local_folder }}"
          - "{{ redis_volumes_data.local_folder }}"
  tags:
    - compose_file
    - datastore_compose_file

- name: Send rsyslog logs to telegraf
  template:
    src: "80-telegraf.conf"
    dest: "/etc/rsyslog.d/80-telegraf.conf"
    mode: 0644
  notify: restart rsyslog

- name: Copy configs
  template:
    src: "{{ item }}"
    dest: "{{ root_dirs_datastore }}/{{ item }}"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: 0644

    block_start_string: "|%"
    block_end_string: "%|"

    variable_start_string: "||"
    variable_end_string: "||"

  with_items:
    - telegraf.conf
    - influxdb.conf
    - kapacitor.conf
  tags: datastore_config

- name: Copy grafana configs
  template:
    src: "grafana.ini"
    dest: "{{ root_dirs_datastore }}/grafana.ini"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: 0644
  tags: grafana_config

- name: Copy docker registry configs
  template:
    src: registry_config.yml
    dest: "{{ root_dirs_datastore }}/registry_config.yml"
    owner: "{{ registry_user }}"
    group: "{{ registry_user }}"
    mode: 0644
  tags: docker_registry_config

- name: Copy prometheus configs
  template:
    src: prometheus.yml
    dest: "{{ root_dirs_datastore }}/prometheus.yml"
    owner: "{{ prometheus_user }}"
    group: "{{ user }}"
    mode: 0644
  tags: prometheus_config

- name: Copy stats scripts
  template:
    src: "{{ item }}"
    dest: "{{ root_dirs_datastore }}/{{ item }}"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: 0755
  with_items:
    - gather_stats.sh
  tags: datastore_config

- name: Install packages
  apt:
    name: "{{ packages }}"
    state: latest
    update_cache: no
  vars:
    packages:
      - lm-sensors

- block:
    - include_tasks: syslog-interceptor.yml
  tags: syslog_interceptor

- block:
  - name: Install ansible dependencies
    pip:
      name: [ "influxdb", "requests" ]
      state: latest
      executable: pip3

  - include_tasks: docker/start_stack.yml
    vars:
      dir: "{{ root_dirs_datastore }}"

  - name: Create influxdb databases
    influxdb_database:
      hostname: 127.0.0.1
      database_name: "{{ item }}"
      state: present
    loop:
      - home_assistant
      - graphite
      - ouroboros
      - traefik
      - "{{ prometheus_user_influxdb_name }}"
  tags: influxdb_init

- block:
  - include_tasks: create_self_signed_cert.yml
    vars:
      privatekey_path: "{{ registry_tls_key }}"
      csr_path: "{{ registry_tls_csr }}"
      pem_path: "{{ registry_tls_crt }}"
  tags: docker_registry_tls

- block:
  - include_tasks: fix_permissions.yml
    vars:
      items: "{{ [ (registry_volumes_data,         registry_user),
                   (registry_volumes_certificates, registry_user),
                   (redis_volumes_data,            redis_user),
                   (prometheus_volumes_data,       prometheus_user, user)
                   ] | volumes_to_permissions }}"
  tags:
    - fix_permissions
    - datastore_fix_permissions
    - compose_file
    - datastore_compose_file
    - grafana_config
