- name: Get VPN CA Cert password
  set_fact:
    ca_cert_pw: "{{ lookup('template', 'standard_pw_gen.jinja2', template_vars=dict(name='vpn_ca_cert')) }}"

- name: Generate VPN user password
  set_fact:
    user_cert_pw: "{{ lookup('template', 'standard_pw_gen.jinja2', template_vars=dict(name=vpn_username)) }}"

- name: Create VPN user
  expect:
    command: "docker run -e EASYRSA_KEY_SIZE={{ openvpn.conf.ca_cert_bits }} -v {{ volumes.vpn.config.local_folder }}:{{ volumes.vpn.config.mount }} --rm -it kylemanna/openvpn easyrsa build-client-full {{ vpn_username }}"
    responses:
      'Enter PEM pass phrase:': "{{ user_cert_pw }}"
      'Enter pass phrase for \/etc\/openvpn\/pki\/private\/ca\.key:': "{{ ca_cert_pw }}"

- set_fact:
    ovpn_name: "{{ vpn_username }}.ovpn"

- set_fact:
    ovpn_path: "{{ root_dirs.pihole }}/{{ ovpn_name }}"

- name: Store OVPN profile in config directory
  shell: "docker run -v {{ volumes.vpn.config.local_folder }}:{{ volumes.vpn.config.mount }} --rm kylemanna/openvpn ovpn_getclient {{ vpn_username }} > {{ ovpn_path }}"

- name: Only route DNS through VPN
  lineinfile:
    path: "{{ ovpn_path }}"
    line: "redirect-gateway def1"
    state: absent
  when: openvpn.conf.client.only_dns_over_vpn

- name: Enable IPv6
  lineinfile:
    path: "{{ ovpn_path }}"
    line: "tun-ipv6"
    state: present
  when: networks.vpn.v6.enable

- name: Copy OVPN profile to host
  fetch:
    src: "{{ ovpn_path }}"
    dest: "{{ playbook_dir }}/{{ ovpn_name }}"
    flat: true
