- hosts: all
  gather_facts: "{{ 'nostats' not in ansible_run_tags }}"
  remote_user: root
  debugger: on_failed

  pre_tasks:
    - include: tasks/init.yml
      tags: always

  roles:
    - { role: base_system/full, tags: [ base_system, base ] }
    - { role: storage, tags: [ zfs, storage, base ] }
    - { role: fileserver, tags: [ fileserver, storage, base ] }
    - { role: duplicacy, tags: [ duplicacy, backup, base ] }
    - { role: docker, tags: [ docker, containers, base ] }

    - { role: dyndns, tags: dyndns }
    - { role: proxy, tags: proxy }
    - { role: datastore, tags: datastore }
    - { role: pihole, tags: pihole }
    - { role: wireguard, tags: wireguard }
    - { role: maintenance, tags: maintenance }
    - { role: rss, tags: rss }
    - { role: jupyter, tags: jupyter }
    - { role: discord, tags: discord }
    - { role: personal_website, tags: realmar_net }
    - { role: home_automation, tags: home_automation }
    - { role: matrix_server, tags: matrix_server }
    - { role: workflow_automation, tags: workflow_automation }
    - { role: onedrive, tags: onedrive }

  #post_tasks:
  #  # I really don't want to install docker-compose via pip just to make the
  #  # docker_container module work. This is because pip install docker-compose
  #  # needs to compile a ton of C code and massively slows down the deployment
  #  - name: Start docker containers
  #    shell: "docker-compose up -d"
  #    args:
  #      chdir: "{{ item }}"
  #    with_items:
  #      - "{{ root_dirs_pihole }}"
  #      - "{{ root_dirs_maintenance }}"
  #      - "{{ root_dirs_rss }}"
  #      - "{{ root_dirs_proxy }}"
  #      - "{{ root_dirs_jupyter }}"
  #    register: cli_result
  #    changed_when:
  #      - '"up-to-date" not in cli_result.stderr'
  #    tags:
  #      - initialize

  handlers:
    - import_tasks: handlers/services.yml
    - import_tasks: handlers/docker.yml
